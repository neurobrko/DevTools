#!/bin/bash

# GIT FUNCTIONS
# git diff with optional filename from git diff --names-only | nl
git_diff_numbered() {
  if [ $# -eq 0 ]; then
    git diff
  elif [ $# -eq 1 ]; then
    if [[ $1 =~ ^[0-9]+$ ]]; then
      local file
      file=$(git diff --name-only | nl | awk -v num="$1" '$1 == num {print $2}')
      git diff "$file"
    elif [[ $1 == "n" ]]; then
      git diff --name-only | nl
    fi
  fi
}

# git checkout with tab completion
gc() {
  git checkout "$@"
}
# Enable git completion if available
if [ -f /usr/share/bash-completion/completions/git ]; then
  . /usr/share/bash-completion/completions/git
fi
# Enable git branch completion for gc
if type __git_complete &>/dev/null; then
  __git_complete gc _git_checkout
fi

# git add untracked files, commit and push
git_commit_push() {
  if [ -z "$1" ]; then
    e_err "No commit message provided!"
    return 1
  else
    local message="$*"
    git add .
    git commit -m "$message"
    git push
    e_succ -e "\nCommit '$message' succesfully pushed to branch: '$(git branch --show-current)'."
  fi
}

# git create stast with message
git_stash_msg() {
  if [ -z "$1" ]; then
    e_warn "Stash changes with message! Don't be lazy..."
  else
    local msg="$*"
    git stash -m "$msg"
    e_succ "Succesfully stashed changes as '$msg' on branch '$(git branch --show-current)'."
  fi
}

# git apply stash by number
git_apply_stash() {
  if [ $# -eq 0 ]; then
    e_warn "Please specify stash number!"
    return 1
  elif [ $# -gt 1 ]; then
    e_warn "Please specify only one stash number!"
    return 1
  else
    git stash apply stash@"{$1}"
  fi
}

# git echo stasth diff by number
# useful combined with '| xc'
git_stash_patch() {
  if [ $# -eq 0 ]; then
    e_warn "Please specify a stash number!"
    return 1
  elif [ $# -gt 1 ]; then
    e_warn "Please specify only one stash number!"
    return 1
  else
    git stash show -p stash@"{$1}"
  fi
}

# drop stash by number with confirmation
# I accidentally dropped stashes, because I mix up gsp and gsd
git_stash_drop() {
  if [ $# -eq 0 ]; then
    e_warn "Please specify a stash number!"
    return 1
  elif [ $# -gt 1 ]; then
    e_warn "Please specify only one stash number!"
    return 1
  else
    read -rp "Are you sure you want to drop stash #$1? (y/N): " confirm
    if [[ "$confirm" =~ ^[yY]$ ]]; then
      git stash drop stash@"{$1}"
    fi
    e_warn "Stash #$1 not dropped."
    return 0
  fi
}

### Git aliases
# git status
alias gi='git status'
# git diff (n files with #, <#> single file)
alias gd=git_diff_numbered
# git fetch all
alias gf='git fetch --all'
# git checkout with tab completion
fake_alias gc
# git commit and push with message
alias gcp=git_commit_push
# git submodule update
alias gsu='git submodule update'
# git stash with message
alias gsm=git_stash_msg
# git stash list
alias gsl='git stash list'
# git stash patch <#>
alias gsp=git_stash_patch
# git stash apply <#>
alias gsa=git_apply_stash
# gti stash drop <#>
alias gsd=git_stash_drop
